if game.PlaceId == 5922311258 then
    local adminList = {
        1234567890,
    }

    local player = game.Players.LocalPlayer
    local isAdmin = false

    for _, userId in ipairs(adminList) do
        if player.UserId == userId then
            isAdmin = true
            break
        end
    end

    if isAdmin then
        local OrionLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Orion/main/source'))()

        local Window = OrionLib:MakeWindow({
            Name = "Whiteware public",
            HidePremium = false,
            IntroEnabled = false,
            IntroText = "Welcome to my script!",
            SaveConfig = true,
            ConfigFolder = "OrionTest",
            Drag = true
        })

        _G.Autoblock = false
        _G.Autohit = false
        _G.AutoHatch = false
        _G.SelectCrates = "Swords"
        _G.InfiniteJump = false
        _G.AutohitRange = 50
        _G.ReachExtenderEnabled = false
        _G.ReachExtenderDistance = 100
        _G.BlockCooldown = 0.2
        _G.WalkSpeed = 16

        function Autoblock()
            while _G.Autoblock do
                local args = { [1] = true }
                game:GetService("ReplicatedStorage").Remotes.Character.Block:FireServer(unpack(args))
                wait(_G.BlockCooldown)
                args = { [1] = false }
                game:GetService("ReplicatedStorage").Remotes.Character.Block:FireServer(unpack(args))
                wait(0.001)
            end
        end

        function AutoHatch()
            while _G.AutoHatch do
                game:GetService("ReplicatedStorage").Remotes.Profile.Purchase:FireServer(_G.SelectCrates, 1)
                wait(0.1)
            end
        end

        function ChangeWalkspeed(newSpeed)
            local character = player.Character or player.CharacterAdded:Wait()
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.WalkSpeed = newSpeed
            end
        end

        function Autohit()
            while wait() do
                if _G.Autohit then
                    for i = 1, 2 do
                        local players = game:GetService("Players"):GetPlayers()
                        local localPlayer = game.Players.LocalPlayer
                        local range = _G.AutohitRange
                        local closestPlayer = nil
                        local closestDistance = math.huge

                        for _, targetPlayer in ipairs(players) do
                            if targetPlayer ~= localPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
                                local distance = (localPlayer.Character.HumanoidRootPart.Position - targetPlayer.Character.HumanoidRootPart.Position).Magnitude
                                if distance < closestDistance then
                                    closestDistance = distance
                                    closestPlayer = targetPlayer
                                end
                            end
                        end

                        if closestPlayer and closestDistance <= range then
                            local args_swing = { [1] = 1 }
                            game:GetService("ReplicatedStorage").Remotes.Character.Swing:FireServer(unpack(args_swing))

                            local args_hit = { [1] = closestPlayer }
                            game:GetService("ReplicatedStorage").Remotes.Character.Hit:FireServer(unpack(args_hit))
                        end
                    end
                end
            end
        end

        spawn(Autohit)

        local Blocktab = Window:MakeTab({
            Name = "Autoblock",
            Icon = "rbxassetid://4483345998",
            PremiumOnly = false
        })

        Blocktab:AddToggle({
            Name = "Autoblock",
            Default = false,
            Callback = function(Value)
                _G.Autoblock = Value
                if _G.Autoblock then
                    spawn(Autoblock)
                end
            end
        })

        Blocktab:AddTextbox({
            Name = "Block Cooldown",
            Default = tostring(_G.BlockCooldown),
            TextDisappear = true,
            Callback = function(Value)
                local cooldown = tonumber(Value)
                if cooldown then
                    _G.BlockCooldown = cooldown
                end
            end
        })

        local Hittab = Window:MakeTab({
            Name = "Autohit",
            Icon = "rbxassetid://4483345998",
            PremiumOnly = false
        })

        Hittab:AddToggle({
            Name = "Autohit",
            Default = false,
            Callback = function(Value)
                _G.Autohit = Value
            end
        })

        Hittab:AddSlider({
            Name = "Autohit Range",
            Min = 10,
            Max = 500,
            Default = 50,
            Callback = function(Value)
                _G.AutohitRange = Value
            end
        })

        Hittab:AddToggle({
            Name = "Reach Extender",
            Default = false,
            Callback = function(Value)
                _G.ReachExtenderEnabled = Value
            end
        })

        Hittab:AddSlider({
            Name = "Reach Extender Distance",
            Min = 10,
            Max = 500,
            Default = 100,
            Callback = function(Value)
                _G.ReachExtenderDistance = Value
            end
        })

        local Hatchtab = Window:MakeTab({
            Name = "AutoHatch",
            Icon = "rbxassetid://4483345998",
            PremiumOnly = false
        })

        Hatchtab:AddToggle({
            Name = "AutoHatch",
            Default = false,
            Callback = function(Value)
                _G.AutoHatch = Value
                if _G.AutoHatch then
                    spawn(AutoHatch)
                end
            end
        })

        Hatchtab:AddDropdown({
            Name = "Select Crates",
            Default = "Swords",
            Options = {"Swords", "Shields"},
            Callback = function(Value)
                _G.SelectCrates = Value
            end
        })

        local Misctab = Window:MakeTab({
            Name = "Misc",
            Icon = "rbxassetid://4483345998",
            PremiumOnly = false
        })

        Misctab:AddTextbox({
            Name = "Walkspeed",
            Default = tostring(_G.WalkSpeed),
            TextDisappear = true,
            Callback = function(Value)
                local walkspeed = tonumber(Value)
                if walkspeed then
                    _G.WalkSpeed = walkspeed
                    ChangeWalkspeed(walkspeed)
                end
            end
        })

        Misctab:AddSlider({
            Name = "Walkspeed Slider",
            Min = 1,
            Max = 200,
            Default = 16,
            Color = Color3.fromRGB(255, 255, 255),
            Increment = 1,
            ValueName = "Speed",
            Callback = function(Value)
                ChangeWalkspeed(Value)
            end
        })

        Misctab:AddToggle({
            Name = "Infinite Jump",
            Default = false,
            Callback = function(Value)
                _G.InfiniteJump = Value
                if _G.InfiniteJump then
                    spawn(InfiniteJump)
                end
            end
        })

        function InfiniteJump()
            game:GetService("UserInputService").JumpRequest:Connect(function()
                if _G.InfiniteJump then
                    game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
                end
            end)
        end

        if _G.InfiniteJump then
            spawn(InfiniteJump)
        end

        OrionLib:MakeNotification({
            Name = "Script Loaded",
            Content = "All functionalities are ready to use!",
            Image = "rbxassetid://4483345998",
            Time = 5
        })

        ChangeWalkspeed(_G.WalkSpeed)

        OrionLib:Init()
    end
end
